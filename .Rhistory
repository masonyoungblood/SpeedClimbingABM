test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$innov_x_times))
plot(density(test$learn_x_times))
plot(density(test$learn_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$n_top))
plot(density(test$innov_x_times))
plot(density(test$innov_x_pop))
plot(density(test$learn_x_pop))
plot(density(test$learn_x_times))
plot(density(test$constraint))
grid
dists
dists/max(dists)
1/(dists/max(dists))
1-(dists/max(dists))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$learn_x_times))
plot(density(test$learn_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$innov_x_times))
#logit functions for interactions
logit <- function(p){return(log(p/(1-p)))}
dists/max(dists)
logit(dists/max(dists))
logit(dists/max(dists))
logit(1-(dists/max(dists)))
logit(1-(dists/max(dists)))^2
inv_logit(logit(1-(dists/max(dists)))^2)
inv_logit <- function(l){return(exp(l)/(1+exp(l)))}
inv_logit(logit(1-(dists/max(dists)))^2)
hist(inv_logit(logit(1-(dists/max(dists)))^2))
hist(inv_logit(logit(1-(dists/max(dists)))^10))
hist(inv_logit(logit(1-(dists/max(dists)))^1))
hist(inv_logit(logit(1-(dists/max(dists)))^0))
hist(inv_logit(logit(1-(dists/max(dists)))^1))
hist(inv_logit(logit(1-(dists/max(dists)))^2))
hist(inv_logit(logit(1-(dists/max(dists)))^3))
hist(inv_logit(logit(1-(dists/max(dists)))^4))
hist(inv_logit(logit(1-(dists/max(dists)))^5))
hist(inv_logit(logit(1-(dists/max(dists)))^6))
hist(inv_logit(logit(1-(dists/max(dists)))^7))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$constraint))
plot(density(test$learn_prob))
plot(density(test$innov_prob))
plot(density(test$n_top))
plot(density(test$improve_rate_m))
plot(density(test$improve_rate_sd))
plot(density(test$improve_min))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$n_top))
plot(density(test$learn_x_times))
plot(density(test$learn_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$innov_x_times))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
dists
log(dists)
hist(log(dists))
hist(log(dists)^2)
hist(log(dists)^0)
hist(log(dists)^1)
hist(log(dists)^2)
hist(log(dists)^3)
hist(log(dists)^4)
hist(log(dists)^5)
hist(log(dists)^6)
hist(log(dists^1))
hist(log(dists^2))
hist(log(dists^3))
hist(log(dists^4))
hist(log(dists^5))
hist(log(dists^6))
hist(log(dists^7))
hist(log(dists^100))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
dists
1/(dists)
1/dists
hist(1/dists)
hist((1/dists)*0.1)
hist((1/dists)*0.5)
hist((1/dists)*2)
hist((1/dists)*4)
hist((1/dists)*40)
hist((1/dists)*400)
hist((2/dists))
hist((3/dists))
hist((30/dists))
hist((1/dists)^2)
hist((1/dists)^4)
hist((1/dists)^5)
(1/dists)^5
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
sort((1/dists)^5)
sort((1/dists)^5, decreasing = TRUE)
sort((1/dists)^6, decreasing = TRUE)
sort((1/dists)^10, decreasing = TRUE)
sort(signif((1/dists)^10, 2), decreasing = TRUE)
sort((1/dists)^9, decreasing = TRUE)
sort((1/dists)^5, decreasing = TRUE)
sort((1/dists)^4, decreasing = TRUE)
sort((1/dists)^3, decreasing = TRUE)
sort((1/dists)^2, decreasing = TRUE)
sort((1/dists)^1, decreasing = TRUE)
sort((1/dists)^2, decreasing = TRUE)
sort((1/dists)^3, decreasing = TRUE)
sort((1/dists)^2, decreasing = TRUE)
plot(density(test$improve_rate_sd))
plot(density(test$improve_min))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$innov_x_times))
plot(density(test$innov_x_pop))
plot(density(test$learn_x_pop))
plot(density(test$learn_x_times))
plot(density(test$n_top))
plot(density(test$improve_rate_m))
plot(density(test$improve_min))
plot(density(test$improve_rate_sd))
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$learn_x_times))
plot(density(test$learn_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$innov_x_times))
plot(density(test$n_top))
plot(density(test$improve_rate_m))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$constraint))
plot(density(test$learn_prob))
plot(density(test$learn_x_times))
plot(density(test$learn_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$innov_x_time))
plot(density(test$innov_x_pop))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$n_top))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$improve_min))
plot(density(test$improve_rate_sd))
plot(density(test$improve_rate_min))
plot(density(test$innov_x_times))
plot(density(test$innov_x_pop))
plot(density(test$learn_x_pop))
plot(density(test$learn_x_times))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$n_top))
plot(density(test$improve_rate_m))
plot(density(test$improve_rate_sd))
plot(density(test$improve_min))
plot(density(test$innov_x_times))
plot(density(test$innov_x_pop))
plot(density(test$learn_x_pop))
plot(density(test$learn_x_times))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$n_top))
plot(density(test$innov_x_times))
plot(density(test$innov_x_pop))
plot(density(test$learn_x_pop))
plot(density(test$learn_x_times))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$learn_x_times))
plot(density(test$learn_x_pop))
plot(density(test$innov_x_pop))
plot(density(test$innov_x_times))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$improve_min))
plot(density(test$improve_min))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$n_top))
plot(density(test$max_dist))
plot(density(test$improve_min))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$improve_min))
plot(density(test$innov_prob))
plot(density(test$innov_x_times))
plot(density(test$innov_x_pop))
plot(density(test$learn_x_pop))
plot(density(test$learn_x_times))
plot(density(test$learn_x_times))
knitr::include_graphics("https://helios-i.mashable.com/imagery/articles/03XKxYMwkNiZJGiHUu2FWnw/hero-image.fill.size_1248x702.v1628089817.png")
#bounded exponential function
bounded_exp <- function(x, rate, min){
return((1-min)*(rate/rate^x)+min)
}
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 2, sd = 0.2)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#to inform lower bound of prior for improve_min
#min(data$time[which(data$year == max(data$year))])/min(data$time[which(data$year == min(data$year))])
knitr::include_graphics("https://www.kindpng.com/picc/m/592-5929143_speed-climbing-wall-sketch-speed-climbing-route-map.png")
#read in grid of holds and convert to meters
grid <- read.csv("grid.csv")
grid <- grid/1000
#euclidean distance function
euclidean <- function(x, skips){
if(skips > 0){return(sqrt((grid$x[x+skips] - grid$x[x-skips])^2 + (grid$y[x+skips] - grid$y[x-skips])^2))}
if(skips == 0){return(sqrt((grid$x[x] - grid$x[x-1])^2 + (grid$y[x] - grid$y[x-1])^2))}
}
#set number of holds
n_holds <- 20
#get distances between holds
dists <- sapply(1:n_holds, function(x){euclidean(x+1, 0)})
#set initial mean speed
init_time <- 18
#set probability of initial beta holds at 1 (all holds on the route)
beta_true_prob <- 1
#set parameter controlling the SD of sequence ratios
sd_multiplier <- 0.5
#initialize starting beta
beta <- sample(c(TRUE, FALSE), n_holds, prob = c(beta_true_prob, 1-beta_true_prob), replace = TRUE)
#initialize sequence ratios
seq_ratios <- truncnorm::rtruncnorm(n_holds, a = 0, mean = 1, sd = sd_multiplier)
#sort sequence ratios to match the distance order of the climbing holds
seq_ratios <- sort(seq_ratios)[rank(dists, ties.method = "first")]
#print the beta and climbing time vectors
beta
(init_time/n_holds)*seq_ratios
#get cumulative climbing times
cum_num <- cumsum(c(0, (init_time/n_holds)*seq_ratios))
#restructure and plot
to_plot <- data.frame(x = unlist(sapply(1:(length(cum_num)-1), function(x){seq(cum_num[x], cum_num[x+1], by = 0.01)})),
y = unlist(sapply(1:(length(cum_num)-1), function(x){rep(x, length(seq(cum_num[x], cum_num[x+1], by = 0.01)))})))
par(mar = c(4, 4, 1, 1))
plot(to_plot$x, to_plot$y, type = "l", xlab = "Time (s)", ylab = "Hold #")
#get min and max distances for prior, and plot...
min_dist <- min(sapply(2:(nrow(grid)-1), function(x){euclidean(x, 1)}))
max_dist <- max(sapply(3:(nrow(grid)-2), function(x){euclidean(x, 2)}))
min_dist
max_dist
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$max_dist))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$learn_prob))
plot(density(test$innovprob))
plot(density(test$innov_prob))
plot(density(test$max_dist))
plot(density(test$innov_x_times))
plot(density(test$innov_x_pop))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_x_pop))
plot(density(test$innov_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$max_dist))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$max_dist))
plot(density(test$constraint))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$constraint))
plot(density(test$innov_prob))
plot(density(test$learn_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
plot(density(test$max_dist))
plot(density(test$constraint))
plot(density(test$innov_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$learn_prob))
plot(density(test$innov_prob))
plot(density(test$constraint))
plot(density(test$max_dist))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$learn_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
plot(density(test$innov_prob))
plot(density(test$max_dist))
library(ggplot2)
library(cowplot)
library(gg.gap)
test <- readRDS("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/params.RDS")
n_m <- 500
n_w <- 500
setwd("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/simulations_m")
params_m <- list()
results_m <- list()
for(i in 1:n_m){
temp <- paste0("_rslurm_", i)
params_m[[i]] <- readRDS(paste0(temp, "/params.RDS"))
results_m[[i]] <- c(unlist(readRDS(paste0(temp, "/results_0.RDS"))),
unlist(readRDS(paste0(temp, "/results_1.RDS"))),
unlist(readRDS(paste0(temp, "/results_2.RDS"))),
unlist(readRDS(paste0(temp, "/results_3.RDS"))),
unlist(readRDS(paste0(temp, "/results_4.RDS"))))
}
setwd("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/simulations_w")
params_w <- list()
results_w <- list()
for(i in 1:n_w){
temp <- paste0("_rslurm_", i)
params_w[[i]] <- readRDS(paste0(temp, "/params.RDS"))
results_w[[i]] <- c(unlist(readRDS(paste0(temp, "/results_0.RDS"))),
unlist(readRDS(paste0(temp, "/results_1.RDS"))),
unlist(readRDS(paste0(temp, "/results_2.RDS"))),
unlist(readRDS(paste0(temp, "/results_3.RDS"))),
unlist(readRDS(paste0(temp, "/results_4.RDS"))))
}
# PLOTS ---------------------------------------------------------
setwd("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output")
labs <- data.frame(a = c("innov_prob", "innov_x_times", "innov_x_pop", "learn_prob", "learn_x_times", "learn_x_pop", "n_top", "constraint", "improve_rate_m", "improve_rate_sd", "improve_min", "max_dist"),
b = c("Innovation Probability", "Innovation x Times", "Innovation x Pop Size", "Learning Probability", "Learning x Times", "Learning x Pop Size", "N Top", "Physical Constraint", "Improvement Rate (M)", "Improvement Rate (SD)", "Minimum Improvement", "Maximum Distance (m)"))
plot_constructor <- function(param, tol = 1000, xlim, bound = 0.001, two_axes = TRUE, scale_tf = FALSE, direction, legend = FALSE){
post_m <- density(params_m[[n_m]][, which(colnames(params_m[[n_m]]) == param)][order(results_m[[n_m]])[1:tol]],
from = xlim[1], to = xlim[2], bw = "SJ", kernel = "gaussian")
post_w <- density(params_w[[n_w]][, which(colnames(params_w[[n_w]]) == param)][order(results_w[[n_w]])[1:tol]],
from = xlim[1], to = xlim[2], bw = "SJ", kernel = "gaussian")
if(!scale_tf){scale <- 1}
if(scale_tf){scale <- ifelse(direction == 0, max(post_w$y)/max(post_m$y), max(post_m$y)/max(post_w$y))}
plot_data <- data.frame(x = c(post_m$x), y1 = c(post_m$y), y2 = c(post_w$y))
if(length(which(post_m$y < bound) > 0)){plot_data$y1[which(plot_data$y1 < bound)] <- NA}
if(length(which(post_m$y < bound) > 0)){plot_data$y2[which(plot_data$y2 < bound)] <- NA}
if(two_axes){
temp <- ggplot(plot_data, aes(x, y)) + geom_line(aes(y = y1, color = "Men")) + geom_line(aes(y = y2/scale, color = "Women")) +
geom_segment(x = plot_data$x[which.max(plot_data$y1)], xend = plot_data$x[which.max(plot_data$y1)],
y = plot_data$y1[which.max(plot_data$y1)], yend = 0, color = "red", linetype = "dotted") +
geom_segment(x = plot_data$x[which.max(plot_data$y2)], xend = plot_data$x[which.max(plot_data$y2)],
y = plot_data$y2[which.max(plot_data$y2)]/scale, yend = 0, color = "blue", linetype = "dotted") +
xlim(xlim[1], xlim[2]) + xlab(labs$b[which(labs$a == param)]) + ylab("") +
scale_color_manual(name = "", values = c("red", "blue"), labels = c("Men", "Women")) +
scale_y_continuous(sec.axis = sec_axis(~.*scale)) +
theme_linedraw(base_size = 9) + theme(legend.position = ifelse(legend, "bottom", "none"),
axis.text.y = element_text(color = "red"),
axis.text.y.right = element_text(color = "blue"))
} else{
temp <- ggplot(plot_data, aes(x, y)) + geom_line(aes(y = y1, color = "Men")) + geom_line(aes(y = y2, color = "Women")) +
geom_segment(x = plot_data$x[which.max(plot_data$y1)], xend = plot_data$x[which.max(plot_data$y1)],
y = plot_data$y1[which.max(plot_data$y1)], yend = 0, color = "red", linetype = "dotted") +
geom_segment(x = plot_data$x[which.max(plot_data$y2)], xend = plot_data$x[which.max(plot_data$y2)],
y = plot_data$y2[which.max(plot_data$y2)], yend = 0, color = "blue", linetype = "dotted") +
xlim(xlim[1], xlim[2]) + xlab(labs$b[which(labs$a == param)]) + ylab("") +
scale_color_manual(name = "", values = c("red", "blue"), labels = c("Men", "Women")) +
theme_linedraw(base_size = 9) + theme(legend.position = ifelse(legend, "bottom", "none"))
}
return(temp)
}
innov_prob <- plot_constructor("innov_prob", xlim = c(0.15, 0.35), scale_tf = TRUE, direction = 0) #big
innov_x_times <- plot_constructor("innov_x_times", xlim = c(-0.2, 0.2), two_axes = FALSE) #small
innov_x_pop <- plot_constructor("innov_x_pop", xlim = c(-0.2, 0.2), two_axes = FALSE) #small
learn_prob <- plot_constructor("learn_prob", xlim = c(0.5, 0.9), scale_tf = TRUE, direction = 0) #big
learn_x_times <- plot_constructor("learn_x_times", xlim = c(-0.2, 0.2), two_axes = FALSE) #small
learn_x_pop <- plot_constructor("learn_x_pop", xlim = c(-0.2, 0.2), two_axes = FALSE) #small
n_top <- plot_constructor("n_top", xlim = c(5, 25), scale_tf = TRUE, direction = 0) #big
constraint <- plot_constructor("constraint", xlim = c(0.5, 2.5), scale_tf = TRUE, direction = 0) #small
improve_rate_m <- plot_constructor("improve_rate_m", xlim = c(1.75, 1.95), scale_tf = TRUE, direction = 0) #big
improve_rate_sd <- plot_constructor("improve_rate_sd", xlim = c(0.05, 0.15), two_axes = FALSE) #small
max_dist <- plot_constructor("max_dist", xlim = c(1.75, 2.75), scale_tf = TRUE, direction = 0) #small
png("strategy_comparison_si.png", width = 8, height = 2, units = "in", res = 300)
legend <- get_legend(plot_constructor("innov_prob", xlim = c(0, 1), legend = TRUE))
first_row <- plot_grid(constraint, improve_rate_m, improve_rate_sd, nrow = 1, labels = c("A", "B", "C"))
plot_grid(first_row, legend, labels = c("A", "B", NULL, NULL), ncol = 1, rel_heights = c(1, 0.1))
dev.off()
png("strategy_comparison_si.png", width = 8, height = 2, units = "in", res = 300)
legend <- get_legend(plot_constructor("innov_prob", xlim = c(0, 1), legend = TRUE))
first_row <- plot_grid(constraint, improve_rate_m, improve_rate_sd, nrow = 1, labels = c("A", "B", "C"))
plot_grid(first_row, legend, ncol = 1, rel_heights = c(1, 0.05))
dev.off()
png("strategy_comparison_si.png", width = 8, height = 2, units = "in", res = 300)
legend <- get_legend(plot_constructor("innov_prob", xlim = c(0, 1), legend = TRUE))
first_row <- plot_grid(constraint, improve_rate_m, improve_rate_sd, nrow = 1, labels = c("A", "B", "C"))
plot_grid(first_row, legend, ncol = 1, rel_heights = c(1, 0.2))
dev.off()
improve_rate_m <- plot_constructor("improve_rate_m", xlim = c(1.75, 1.95), scale_tf = TRUE, direction = 0) #big
improve_rate_sd <- plot_constructor("improve_rate_sd", xlim = c(0.05, 0.15), scale_tf = TRUE, direction = 0) #small
max_dist <- plot_constructor("max_dist", xlim = c(1.75, 2.75), scale_tf = TRUE, direction = 0) #small
png("strategy_comparison_si.png", width = 8, height = 3, units = "in", res = 300)
legend <- get_legend(plot_constructor("innov_prob", xlim = c(0, 1), legend = TRUE))
first_row <- plot_grid(constraint, improve_rate_m, improve_rate_sd, nrow = 1, labels = c("A", "B", "C"))
plot_grid(first_row, legend, ncol = 1, rel_heights = c(1, 0.2))
dev.off()
png("strategy_comparison_si.png", width = 8, height = 2.5, units = "in", res = 300)
legend <- get_legend(plot_constructor("innov_prob", xlim = c(0, 1), legend = TRUE))
first_row <- plot_grid(constraint, improve_rate_m, improve_rate_sd, nrow = 1, labels = c("A", "B", "C"))
plot_grid(first_row, legend, ncol = 1, rel_heights = c(1, 0.2))
dev.off()
png("strategy_comparison_si.png", width = 8, height = 2.3, units = "in", res = 300)
legend <- get_legend(plot_constructor("innov_prob", xlim = c(0, 1), legend = TRUE))
first_row <- plot_grid(constraint, improve_rate_m, improve_rate_sd, nrow = 1, labels = c("A", "B", "C"))
plot_grid(first_row, legend, ncol = 1, rel_heights = c(1, 0.2))
dev.off()
setwd("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/simulations_m")
params_m <- readRDS("_rslurm_1/params.RDS")
results_m <- c(unlist(readRDS("_rslurm_1/results_0.RDS")),
unlist(readRDS("_rslurm_1/results_1.RDS")),
unlist(readRDS("_rslurm_1/results_2.RDS")),
unlist(readRDS("_rslurm_1/results_3.RDS")),
unlist(readRDS("_rslurm_1/results_4.RDS")))
setwd("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM/hpcc_output/simulations_w")
params_w <- readRDS("_rslurm_1/params.RDS")
results_w <- c(unlist(readRDS("_rslurm_1/results_0.RDS")),
unlist(readRDS("_rslurm_1/results_1.RDS")),
unlist(readRDS("_rslurm_1/results_2.RDS")),
unlist(readRDS("_rslurm_1/results_3.RDS")),
unlist(readRDS("_rslurm_1/results_4.RDS")))
#set working directory, load data, source code
setwd("~/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM")
load("hpcc_output/posteriors_m.RData")
load("hpcc_output/posteriors_w.RData")
load("hpcc_output/priors_m.RData")
load("hpcc_output/priors_w.RData")
load("data.RData")
grid <- read.csv("grid.csv")/1000
library(ggplot2)
library(ggplotify)
library(cowplot)
library(patchwork)
# PLOT ROUTE SEQUENCES ----------------------------------------------------
routes_norm_m_best <- lapply(1:length(posteriors_m$norm), function(x){posteriors_m$norm[[x]]$beta[[which.min(posteriors_m$norm[[x]]$current_record)]]})
routes_norm_m_common <- lapply(1:length(posteriors_m$norm), function(x){as.numeric(strsplit(names(sort(table(sapply(1:length(posteriors_m$norm[[x]]$beta), function(y){paste0(which(posteriors_m$norm[[x]]$beta[[y]]), collapse = " ")})), decreasing = TRUE)[1]), " ")[[1]])})
routes_norm_w_best <- lapply(1:length(posteriors_w$norm), function(x){posteriors_w$norm[[x]]$beta[[which.min(posteriors_w$norm[[x]]$current_record)]]})
routes_norm_w_common <- lapply(1:length(posteriors_w$norm), function(x){as.numeric(strsplit(names(sort(table(sapply(1:length(posteriors_w$norm[[x]]$beta), function(y){paste0(which(posteriors_w$norm[[x]]$beta[[y]]), collapse = " ")})), decreasing = TRUE)[1]), " ")[[1]])})
routes_norm_w_common
routes_norm_w_common[[1]]
16 %in% routes_norm_w_common[[1]]
length(which(sapply(1:length(routes_norm_w_common), function(x){!(16 %in% routes_norm_w_common[[1]])}))
)
!(16 %in% routes_norm_w_common[[1]])
sapply(1:length(routes_norm_w_common), function(x){!(16 %in% routes_norm_w_common[[x]])})
length(which(sapply(1:length(routes_norm_w_common), function(x){!(16 %in% routes_norm_w_common[[x]])})))
length(which(sapply(1:length(routes_norm_w_common), function(x){!(16 %in% routes_norm_m_common[[x]])})))
sapply(1:20, function(y){length(which(sapply(1:length(routes_norm_w_common), function(x){!(y %in% routes_norm_m_common[[x]])})))})
length(which(sapply(1:length(routes_norm_m_common), function(x){!(16 %in% routes_norm_m_common[[x]])})))
sapply(1:20, function(y){length(which(sapply(1:length(routes_norm_m_common), function(x){!(y %in% routes_norm_m_common[[x]])})))})
data.frame(x = 1:20, y = sapply(1:20, function(y){length(which(sapply(1:length(routes_norm_m_common), function(x){!(y %in% routes_norm_m_common[[x]])})))}))
data.frame(x = 1:20, y = sapply(1:20, function(y){length(which(sapply(1:length(routes_norm_m_common), function(x){!(y %in% routes_norm_m_common[[x]])})))}))
