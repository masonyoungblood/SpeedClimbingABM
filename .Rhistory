setwd("/Users/masonyoungblood/Documents/Work/Summer_2021/Speed Climbing/SpeedClimbingABM")
load("data.RData")
grid <- read.csv("grid.csv")/1000
source("SpeedClimbingABM.R")
#subset data by gender
data <- data[which(data$gender == "M"), ]
#get all unique climbers
uniq_climbers <- unique(data$athlete)
#separate continuous sequences of years
seqs <- lapply(uniq_climbers, function(x){split(data$year[which(data$athlete == x)], cumsum(seq_along(data$year[which(data$athlete == x)]) %in% (which(diff(data$year[which(data$athlete == x)]) > 1) + 1)))})
#for each unique climber, iterate through their sequences, and and extract their ID, start year, end year, and time in start year (separate row per sequence)
pop_data <- data.table::data.table(do.call(rbind, lapply(1:length(uniq_climbers), function(i){
t(sapply(1:length(seqs[[i]]), function(j){
c(uniq_climbers[i], min(unlist(seqs[[i]][j])), max(unlist(seqs[[i]][j])), data$time[which(data$athlete == uniq_climbers[i] & data$year == min(unlist(seqs[[i]][j])))])
}))
})))
colnames(pop_data) <- c("ID", "start", "end", "time")
pop_data
#get years
years <- sort(unique(data$year))
#get population sizes
n <- unlist(lapply(1:length(years), function(x){nrow(data[which(data$year == years[x]), ])}))
#number of simulations per round
n_sim <- 10000000
#set priors
priors <- data.frame(innov_prob = rbeta(n_sim, 1, 2),
innov_x_times = rnorm(n_sim, 0, 0.5),
innov_x_pop = rnorm(n_sim, 0, 0.5),
innov_x_year = rnorm(n_sim, 0, 0.5),
learn_prob = rbeta(n_sim, 1, 2),
learn_x_times = rnorm(n_sim, 0, 0.5),
learn_x_pop = rnorm(n_sim, 0, 0.5),
learn_x_year = rnorm(n_sim, 0, 0.5),
n_top = runif(n_sim, 0, 1),
constraint_a = rnorm(n_sim, 0, 1),
constraint_b = rnorm(n_sim, 0, 1),
improve_rate_m = runif(n_sim, 1, 5))
#sample and save known values
set.seed(123)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
innov_x_times = rnorm(1, 0, 0.5),
innov_x_pop = rnorm(1, 0, 0.5),
innov_x_year = rnorm(1, 0, 0.5),
learn_prob = rbeta(1, 1, 2),
learn_x_times = rnorm(1, 0, 0.5),
learn_x_pop = rnorm(1, 0, 0.5),
learn_x_year = rnorm(1, 0, 0.5),
n_top = runif(1, 0, 1),
constraint_a = rnorm(1, 0, 1),
constraint_b = rnorm(1, 0, 1),
improve_rate_m = runif(1, 1, 5))
#get simulated data from known parameter values
obs_stats <- SpeedClimbingABM(n = n, years = years, pop_data = pop_data, grid = grid, n_holds = 20,
beta_true_prob = 1, innov_prob = known$innov_prob, learn_prob = known$learn_prob,
innov_x_times = known$innov_x_times, innov_x_pop = known$innov_x_pop, innov_x_year = known$innov_x_year,
learn_x_times = known$learn_x_times, learn_x_pop = known$learn_x_pop, learn_x_year = known$learn_x_year,
n_top = known$n_top, max_dist = 1.645, constraint_a = known$constraint_a, constraint_b = known$constraint_b,
improve_rate_m = known$improve_rate_m, improve_min = 0.3427374, sum_stats = FALSE, plot = FALSE)
obs_stats
c(obs_stats)
unlist(obs_stats)
#bounded exponential function
bounded_exp <- function(x, rate, min){
return((1-min)*(rate/rate^x)+min)
}
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 10, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 5, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 4, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 3, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 2, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 1, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 1.5, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 1.2, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
#generate values
x <- 1:12
rates <- truncnorm::rtruncnorm(100, a = 1, mean = 1.1, sd = 0.01)
y <- sapply(1:length(rates), function(h){bounded_exp(x, rates[h], 0.4)})
#plot
par(mar = c(4, 4, 1, 1))
matplot(x, y, type = "l", xlab = "Timestep", ylab = "Athletic Improvement", ylim = c(0, 1), col = scales::alpha("black", 0.2), lty = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1)
#sample and save known values
set.seed(123)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(1234)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(12345)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(321)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(4321)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(54321)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(1)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(123)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(123)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(123456)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(123456)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
set.seed(123456)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 4))
known
#sample and save known values
set.seed(123456)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 3))
known
#sample and save known values
set.seed(123456)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 3))
known
set.seed(12345)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 3))
known
#sample and save known values
set.seed(123456)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 3))
known
#sample and save known values
set.seed(12)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 3))
known
#sample and save known values
set.seed(5)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 3))
known
#sample and save known values
set.seed(4)
known <- data.frame(innov_prob = rbeta(1, 1, 2),
learn_prob = rbeta(1, 1, 2),
constraint_b = truncnorm::rtruncnorm(1, a = 0, mean = 0, sd = 1),
improve_rate_m = runif(1, 1, 3))
known
